{"version":3,"sources":["../src/index.js"],"names":["MarkdownNavbar","props","_winScroll","scrollTop","window","pageYOffset","document","documentElement","body","newHeadingList","_getHeadingList","map","h","distanceToTop","Math","abs","headingTopOffset","offsetTop","distanceList","minDistance","min","curHeading","find","updateHashAuto","_updateHash","dataId","onHashChange","setState","currentListNo","listNo","state","addTargetTimeout","clearTimeout","setTimeout","_initheadingsId","addEventListener","scrollTimeout","removeEventListener","contentWithoutCode","source","replace","pattOfTitle","matchResult","match","navData","r","i","index","level","length","text","levelCount","filter","startLevel","startLevelCount","forEach","t","toString","w","$1","$2","parseInt","result","nav","indexOf","target","querySelector","scrollTo","_getNavStructure","headings","querySelectorAll","curheading","Array","prototype","slice","apply","innerText","dataset","id","declarative","headingId","location","hash","trim","_scrollToTarget","headingList","push","value","history","replaceState","pathname","search","tBlocks","cls","currentHash","onNavChange","evt","random","substring","ordered","className","propTypes","string","bool","number","func","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class MarkdownNavbar extends Component {\n  static propTypes = {\n    source: PropTypes.string,\n    ordered: PropTypes.bool,\n    headingTopOffset: PropTypes.number,\n    updateHashAuto: PropTypes.bool,\n    declarative: PropTypes.bool,\n    className: PropTypes.string,\n    onNavChange: PropTypes.func,\n    onHashChange: PropTypes.func,\n  };\n\n  static defaultProps = {\n    source: '',\n    ordered: true,\n    headingTopOffset: 0,\n    updateHashAuto: true,\n    declarative: false,\n    className: '',\n    onNavChange: () => {},\n    onHashChange: () => {},\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentListNo: '',\n    };\n  }\n\n  componentWillReceiveProps() {\n    if (this.addTargetTimeout) {\n      clearTimeout(this.addTargetTimeout);\n    }\n    this.addTargetTimeout = setTimeout(() => {\n      this._initheadingsId();\n      document.addEventListener('scroll', this._winScroll, false);\n    }, 1e3);\n  }\n\n  componentWillUnmount() {\n    if (this.addTargetTimeout) {\n      clearTimeout(this.addTargetTimeout);\n    }\n    if (this.scrollTimeout) {\n      clearTimeout(this.scrollTimeout);\n    }\n    document.removeEventListener('scroll', this._winScroll, false);\n  }\n\n  _getNavStructure() {\n    const contentWithoutCode = this.props.source.replace(\n      /```[^`\\n]*\\n+[^```]+```\\n+/g,\n      ''\n    );\n\n    const pattOfTitle = /#+\\s([^#\\n]+)\\n*/g;\n    const matchResult = contentWithoutCode.match(pattOfTitle);\n\n    if (!matchResult) {\n      return [];\n    }\n\n    const navData = matchResult.map((r, i) => ({\n      index: i,\n      level: r.match(/^#+/g)[0].length,\n      text: r.replace(pattOfTitle, '$1'),\n    }));\n\n    const levelCount = level => navData.filter(r => r.level === level).length;\n    let startLevel = 1;\n    let startLevelCount = levelCount(startLevel);\n    while (!startLevelCount) {\n      startLevel += 1;\n      startLevelCount = levelCount(startLevel);\n    }\n\n    let listNo = 1;\n    navData.forEach(t => {\n      if (t.level === startLevel) {\n        t.listNo = listNo.toString();\n        listNo += 1;\n      }\n    });\n\n    navData.forEach((t, i) => {\n      if (!t.listNo) {\n        if (navData[i - 1] && t.level === navData[i - 1].level + 1) {\n          t.listNo = `${navData[i - 1].listNo}.1`;\n        } else if (navData[i - 1] && t.level === navData[i - 1].level) {\n          t.listNo = navData[i - 1].listNo.replace(\n            /^(.+\\.)(\\d+)$/g,\n            (w, $1, $2) => `${$1}${parseInt($2, 10) + 1}`\n          );\n        } else {\n          t.listNo = '';\n        }\n      }\n    });\n\n    const result = navData.map(nav => ({\n      ...nav,\n      listNo: nav.listNo.indexOf('.') < 0 ? `${nav.listNo}.` : nav.listNo,\n      text: nav.text.replace(/^(\\d+\\.)+\\s?/g, '').replace(/^\\d+\\.?\\s?/g, ''),\n    }));\n\n    return result;\n  }\n\n  _scrollToTarget(dataId) {\n    if (this.scrollTimeout) {\n      clearTimeout(this.scrollTimeout);\n    }\n\n    // TODO: create one new `scrollTo` method for different browsers.\n    this.scrollTimeout = setTimeout(() => {\n      const target = document.querySelector(`[data-id=\"${dataId}\"]`);\n      window.scrollTo(0, target.offsetTop - this.props.headingTopOffset);\n    }, 1e2);\n  }\n\n  _initheadingsId() {\n    this._getNavStructure().forEach(t => {\n      const headings = document.querySelectorAll(`h${t.level}`);\n      const curheading = Array.prototype.slice\n        .apply(headings)\n        .find(\n          h =>\n            h.innerText\n              .replace(/^(\\d+\\.)+\\s?/g, '')\n              .replace(/^\\d+\\.?\\s?/g, '') === t.text\n        );\n\n      if (curheading) {\n        curheading.dataset.id = this.props.declarative\n          ? t.text\n          : `heading-${t.index}`;\n      }\n\n      const headingId = this.props.declarative\n        ? window.location.hash.replace(/^#/, '').trim()\n        : (window.location.hash.match(/heading-\\d+/g) || [])[0];\n\n      if (headingId && headingId === curheading.dataset.id) {\n        this._scrollToTarget(headingId);\n        this.setState({\n          currentListNo: t.listNo,\n        });\n      }\n    });\n  }\n\n  _getHeadingList() {\n    const headingList = [];\n\n    this._getNavStructure().forEach(t => {\n      const headings = document.querySelectorAll(`h${t.level}`);\n      const curheading = Array.prototype.slice\n        .apply(headings)\n        .find(\n          h =>\n            h.innerText\n              .replace(/^(\\d+\\.)+\\s?/g, '')\n              .replace(/^\\d+\\.?\\s?/g, '') === t.text\n        );\n      if (curheading) {\n        headingList.push({\n          dataId: this.props.declarative ? t.text : `heading-${t.index}`,\n          listNo: t.listNo,\n          offsetTop: curheading.offsetTop,\n        });\n      }\n    });\n\n    return headingList;\n  }\n\n  _winScroll = () => {\n    const scrollTop =\n      window.pageYOffset ||\n      document.documentElement.scrollTop ||\n      document.body.scrollTop ||\n      0;\n\n    const newHeadingList = this._getHeadingList().map(h => ({\n      ...h,\n      distanceToTop: Math.abs(\n        scrollTop + this.props.headingTopOffset - h.offsetTop\n      ),\n    }));\n    const distanceList = newHeadingList.map(h => h.distanceToTop);\n    const minDistance = Math.min(...distanceList);\n    const curHeading = newHeadingList.find(\n      h => h.distanceToTop === minDistance\n    );\n\n    if (this.props.updateHashAuto) {\n      this._updateHash(curHeading.dataId);\n\n      // Hash changing callback\n      this.props.onHashChange(curHeading.dataId);\n    }\n    this.setState({\n      currentListNo: curHeading.listNo,\n    });\n  };\n\n  _updateHash(value) {\n    history.replaceState(\n      {},\n      '',\n      `${window.location.pathname}${window.location.search}#${value}`\n    );\n  }\n\n  render() {\n    const tBlocks = this._getNavStructure().map(t => {\n      const cls = `title-anchor title-level${t.level} ${\n        this.state.currentListNo === t.listNo ? 'active' : ''\n      }`;\n\n      return (\n        <div\n          className={cls}\n          onClick={evt => {\n            // Avoid the trigger of event callback `onNavChange` when clicking current nav item\n            if (t.listNo === this.state.currentListNo) {\n              return;\n            }\n\n            const currentHash = this.props.declarative\n              ? t.text\n              : `heading-${t.index}`;\n\n            this._updateHash(currentHash);\n            this._scrollToTarget(currentHash);\n            this.setState({\n              currentListNo: t.listNo,\n            });\n\n            // Nav changing callback\n            this.props.onNavChange(evt, currentHash);\n\n            // Hash changing callback\n            this.props.onHashChange(currentHash);\n          }}\n          key={`title_anchor_${Math.random()\n            .toString(36)\n            .substring(2)}`}>\n          {this.props.ordered ? <small>{t.listNo}</small> : null}\n          {t.text}\n        </div>\n      );\n    });\n\n    return (\n      <div className={`markdown-navigation ${this.props.className}`}>\n        {tBlocks}\n      </div>\n    );\n  }\n}\n\nexport default MarkdownNavbar;\n"]}